"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const e = require("react/jsx-runtime"), r = require("react"), t = require("axios"), s = require("@mui/material"), a = require("@mui/icons-material/Person.js"), n = require("@mui/icons-material/Email.js"), i = require("@mui/icons-material/Visibility.js"), o = require("@mui/icons-material/VisibilityOff.js"), l = require("@mui/icons-material/Phone.js"), d = require("@mui/icons-material/AddLocation.js"), c = require("@mui/icons-material/Home.js"), x = require("react-router-dom"), m = require("i18next");
exports.default = () => {
  const [u, h] = r.useState({ name: "", email: "", password: "", phone: "", address: "", governorate: "" }), p = x.useNavigate(), [g, j] = r.useState(false), [y, v] = r.useState({}), [T, f] = r.useState(""), I = (e2) => {
    const { name: r2, value: t2 } = e2.target;
    h({ ...u, [r2]: t2 });
  };
  return e.jsxs(s.Box, { sx: { maxWidth: 400, margin: "auto", mt: 5, p: 3, border: "1px solid #ccc", borderRadius: 4 }, children: [e.jsx(s.Typography, { variant: "h4", gutterBottom: true, children: m.t("create_account") }), e.jsxs("form", { onSubmit: async (e2) => {
    e2.preventDefault();
    const r2 = {};
    if (Object.keys(u).forEach((e3) => {
      u[e3] || (r2[e3] = `${e3} ${m.t("requierd")}`);
    }), Object.keys(r2).length > 0) v(r2);
    else try {
      const e3 = await t.post("https://fanaristore.sama-tek.com/api/customer-register", u), r3 = e3.data.token;
      localStorage.setItem("accessToken", r3), console.log("Registration successful:", e3.data);
      localStorage.getItem("accessToken") && p("/");
    } catch (e3) {
      e3.response && 409 === e3.response.status ? f("المستخدم مسجل بالفعل") : console.error("Registration failed:", e3);
    }
  }, children: [e.jsxs(s.Grid, { container: true, spacing: 2, alignItems: "center", children: [e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("name"), e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: "*" })] }), e.jsx(s.TextField, { name: "name", variant: "outlined", fullWidth: true, margin: "normal", value: u.name, onChange: I, InputProps: { startAdornment: e.jsx(s.IconButton, { children: e.jsx(a, {}) }) }, error: y.name, helperText: y.name })] }), e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("email"), e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: " *" })] }), e.jsx(s.TextField, { name: "email", variant: "outlined", fullWidth: true, margin: "normal", value: u.email, onChange: I, InputProps: { startAdornment: e.jsx(s.IconButton, { children: e.jsx(n, {}) }) }, error: y.email, helperText: y.email })] }), e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("password"), " ", e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: "*" })] }), e.jsx(s.TextField, { name: "password", variant: "outlined", fullWidth: true, margin: "normal", value: u.password, onChange: I, type: g ? "text" : "password", InputProps: { startAdornment: e.jsx(s.IconButton, { onClick: () => j(!g), children: g ? e.jsx(i, {}) : e.jsx(o, {}) }) }, error: y.password, helperText: y.password })] }), e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("phone"), " ", e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: "* " })] }), e.jsx(s.TextField, { name: "phone", variant: "outlined", fullWidth: true, margin: "normal", value: u.phone, onChange: I, InputProps: { startAdornment: e.jsx(s.IconButton, { children: e.jsx(l, {}) }) }, error: y.phone, helperText: y.phone })] }), e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("title"), " ", e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: " * " })] }), e.jsx(s.TextField, { name: "address", variant: "outlined", fullWidth: true, margin: "normal", value: u.address, onChange: I, InputProps: { startAdornment: e.jsx(s.IconButton, { children: e.jsx(d, {}) }) }, error: y.address, helperText: y.address })] }), e.jsxs(s.Grid, { item: true, xs: 12, children: [e.jsxs(s.Typography, { variant: "subtitle1", sx: { display: "flex", alignItems: "center" }, children: [m.t("gov"), " ", e.jsx(s.Typography, { sx: { color: "red", ml: 0.5 }, children: " * " })] }), e.jsx(s.TextField, { name: "governorate", variant: "outlined", fullWidth: true, margin: "normal", value: u.governorate, onChange: I, InputProps: { startAdornment: e.jsx(s.IconButton, { children: e.jsx(c, {}) }) }, error: y.governorate, helperText: y.governorate })] })] }), T && e.jsx(s.Alert, { severity: "error", sx: { mt: 2 }, children: T }), e.jsx(s.Button, { type: "submit", variant: "contained", color: "primary", fullWidth: true, sx: { mt: 2 }, children: "تسجيل" })] }), e.jsxs(s.Typography, { variant: "body2", align: "center", sx: { mt: 2 }, children: [m.t("have_account"), " ", e.jsx(s.Link, { href: "/login", children: m.t("login_here") }), "."] })] });
};
